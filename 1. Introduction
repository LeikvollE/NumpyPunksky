# 1. Introduksjon og Grunnleggende Konsepter (10 minutter)

## 1.1 Hva er NumPy?

NumPy, som står for Numerical Python, er hjørnesteinen i vitenskapelig databehandling i Python. Det gir støtte for:
- Store, flerdimensjonale arrays og matriser
- En omfattende samling av matematiske funksjoner
- Kraftige verktøy for lineær algebra, Fourier-transformasjon og tilfeldige tall

## 1.2 Hvorfor NumPy for Punktsky-behandling?

Punktskyer er store samlinger av 3D-punkter, ofte millioner av dem. NumPy er ideell for å håndtere slike data fordi:
1. Det tilbyr effektive datastrukturer for å representere punktskyer
2. Det gir rask utførelse av matematiske operasjoner på store datasett
3. Det integrerer godt med andre vitenskapelige Python-biblioteker

## 1.3 NumPy vs. Standard Python-lister

La oss sammenligne NumPy-arrays med standard Python-lister:

```python
import numpy as np
import time

# Standard Python-liste
python_liste = list(range(1000000))

# NumPy-array
numpy_array = np.array(range(1000000))

# Sammenlign ytelse for en enkel operasjon
start = time.time()
python_resultat = [i**2 for i in python_liste]
python_tid = time.time() - start

start = time.time()
numpy_resultat = numpy_array**2
numpy_tid = time.time() - start

print(f"Python liste tid: {python_tid:.4f} sekunder")
print(f"NumPy array tid: {numpy_tid:.4f} sekunder")
print(f"NumPy er {python_tid/numpy_tid:.1f}x raskere")
```

## 1.4 Grunnleggende NumPy-datatyper

NumPy introduserer flere nye datatyper:
- `int8`, `int16`, `int32`, `int64`: Heltall med forskjellige størrelser
- `float16`, `float32`, `float64`: Flyttall med forskjellige presisjoner
- `bool_`: Boolske verdier
- `complex64`, `complex128`: Komplekse tall

Valg av riktig datatype kan ha betydelig innvirkning på ytelse og minnebruk.

## 1.5 Dimensjoner og Akser

I NumPy refererer vi ofte til dimensjoner som "akser":
- En 1D-array har én akse
- En 2D-array (som en matrise) har to akser
- En 3D-array har tre akser

For punktskyer bruker vi vanligvis 2D-arrays, hvor:
- Første akse (akse 0) representerer individuelle punkter
- Andre akse (akse 1) representerer x-, y-, og z-koordinater

I løpet av denne timen vil vi utforske hvordan vi kan utnytte disse konseptene for effektiv punktsky-behandling. La oss nå gå videre til å se på hvordan vi kan opprette og manipulere NumPy-arrays.
